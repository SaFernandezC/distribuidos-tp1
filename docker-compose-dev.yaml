networks:
  testing_net:
    driver: bridge
    ipam:
      config:
      - subnet: 172.25.125.0/24
      driver: default
services:
  accepter:
    container_name: accepter
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
    - PYTHONUNBUFFERED=1
    - TRIP_PARSERS=1
    - WEATHER_PARSERS=1
    - STATION_PARSERS=1
    image: accepter:latest
    links:
    - rabbitmq
    networks:
    - testing_net
    restart: on-failure
  date_modifier:
    depends_on:
    - prectot_filter
    deploy:
      replicas: 1
    environment:
    - PYTHONUNBUFFERED=1
    - INPUT_QUEUE_NAME=date_modifier
    - OUTPUT_EXCHANGE=joiner_query_1
    - OUTPUT_EXCHANGE_TYPE=fanout
    image: date_modifier:latest
    links:
    - rabbitmq
    networks:
    - testing_net
    restart: on-failure
  distance_calculator:
    depends_on:
      rabbitmq:
        condition: service_healthy
    deploy:
      replicas: 1
    environment:
    - PYTHONUNBUFFERED=1
    - INPUT_QUEUE_NAME=distance_calculator
    - OUTPUT_QUEUE_NAME=groupby_query_3
    image: distance_calculator:latest
    links:
    - rabbitmq
    networks:
    - testing_net
    restart: on-failure
  eof_manager:
    container_name: eof_manager
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
    - PYTHONUNBUFFERED=1
    image: eof_manager:latest
    links:
    - rabbitmq
    networks:
    - testing_net
    restart: on-failure
  filter_stations_query2:
    depends_on:
      rabbitmq:
        condition: service_healthy
    deploy:
      replicas: 1
    environment:
    - PYTHONUNBUFFERED=1
    - SHOW_LOGS=False
    - INPUT_EXCHANGE=stations
    - INPUT_EXCHANGE_TYPE=fanout
    - INPUT_QUEUE=filter_stations_query2
    - INPUT_BIND=True
    - OUTPUT_EXCHANGE=joiner_query_2
    - OUTPUT_EXCHANGE_TYPE=fanout
    - SELECT=city,code,name,yearid
    image: filter:latest
    links:
    - rabbitmq
    networks:
    - testing_net
    restart: on-failure
  filter_stations_query3:
    depends_on:
      rabbitmq:
        condition: service_healthy
    deploy:
      replicas: 1
    environment:
    - PYTHONUNBUFFERED=1
    - SHOW_LOGS=Fase
    - INPUT_EXCHANGE=stations
    - INPUT_EXCHANGE_TYPE=fanout
    - INPUT_QUEUE=filter_stations_query3
    - INPUT_BIND=True
    - OUTPUT_EXCHANGE=joiner_query_3
    - OUTPUT_EXCHANGE_TYPE=fanout
    - SELECT=city,code,name,latitude,longitude,yearid
    - CANT_CONDICIONES=1
    - FILTER_0=1,string,city,eq,montreal
    image: filter:latest
    links:
    - rabbitmq
    networks:
    - testing_net
    restart: on-failure
  filter_trips_query1:
    depends_on:
      rabbitmq:
        condition: service_healthy
    deploy:
      replicas: 1
    environment:
    - PYTHONUNBUFFERED=1
    - SHOW_LOGS=False
    - INPUT_EXCHANGE=trips
    - INPUT_EXCHANGE_TYPE=fanout
    - INPUT_QUEUE=filter_trips_query1
    - INPUT_BIND=True
    - OUTPUT_QUEUE_NAME=joiner_1
    - CANT_CONDICIONES=0
    - SELECT=city,start_date,duration_sec
    image: filter:latest
    links:
    - rabbitmq
    networks:
    - testing_net
    restart: on-failure
  filter_trips_query3:
    depends_on:
      rabbitmq:
        condition: service_healthy
    deploy:
      replicas: 1
    environment:
    - PYTHONUNBUFFERED=1
    - SHOW_LOGS=False
    - INPUT_EXCHANGE=trips
    - INPUT_EXCHANGE_TYPE=fanout
    - INPUT_QUEUE=filter_trips_query3
    - INPUT_BIND=True
    - OUTPUT_QUEUE_NAME=joiner_3
    - CANT_CONDICIONES=1
    - FILTER_0=1,string,city,eq,montreal
    - SELECT=start_station_code,end_station_code,yearid
    image: filter:latest
    links:
    - rabbitmq
    networks:
    - testing_net
    restart: on-failure
  filter_trips_year:
    depends_on:
      rabbitmq:
        condition: service_healthy
    deploy:
      replicas: 1
    environment:
    - PYTHONUNBUFFERED=1
    - SHOW_LOGS=False
    - INPUT_EXCHANGE=trips
    - INPUT_EXCHANGE_TYPE=fanout
    - INPUT_QUEUE=filter_trips_year
    - INPUT_BIND=True
    - OUTPUT_QUEUE_NAME=joiner_2
    - SELECT=city,start_station_code,yearid
    - CANT_CONDICIONES=2
    - FILTER_0=1,int,yearid,eq,2016
    - FILTER_1=1,int,yearid,eq,2017
    - OPERATORS=OR
    image: filter:latest
    links:
    - rabbitmq
    networks:
    - testing_net
    restart: on-failure
  groupby_query_1:
    container_name: groupby_query_1
    depends_on:
    - joiner_query_1
    environment:
    - PYTHONUNBUFFERED=1
    - QUERY=query1
    - INPUT_QUEUE_NAME=groupby_query_1
    - OUTPUT_QUEUE_NAME=status_controller
    - PRIMARY_KEY=start_date
    - AGG=avg
    - FIELD_TO_AGREGATE=duration_sec
    image: groupby:latest
    links:
    - rabbitmq
    networks:
    - testing_net
    restart: on-failure
  groupby_query_2:
    container_name: groupby_query_2
    depends_on:
    - joiner_query_2
    environment:
    - PYTHONUNBUFFERED=1
    - QUERY=2
    - INPUT_QUEUE_NAME=groupby_query_2
    - OUTPUT_QUEUE_NAME=status_controller
    - PRIMARY_KEY=name
    - AGG=count
    - FIELD_TO_AGREGATE=yearid
    - QUERY=query2
    - SEND_DATA_FUNCTION=find_dup_trips_year
    image: groupby:latest
    links:
    - rabbitmq
    networks:
    - testing_net
    restart: on-failure
  groupby_query_3:
    container_name: groupby_query_3
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
    - PYTHONUNBUFFERED=1
    - QUERY=query3
    - INPUT_QUEUE_NAME=groupby_query_3
    - OUTPUT_QUEUE_NAME=status_controller
    - PRIMARY_KEY=end_name
    - AGG=avg
    - FIELD_TO_AGREGATE=distance
    - SEND_DATA_FUNCTION=find_stations_query_3
    image: groupby:latest
    links:
    - rabbitmq
    networks:
    - testing_net
    restart: on-failure
  joiner_query_1:
    depends_on:
    - date_modifier
    - parser
    deploy:
      replicas: 1
    environment:
    - PYTHONUNBUFFERED=1
    - INPUT_EXCHANGE_1=joiner_query_1
    - INPUT_EXCHANGE_TYPE_1=fanout
    - INPUT_BIND_1=True
    - INPUT_QUEUE_NAME_2=joiner_1
    - OUTPUT_QUEUE_NAME=groupby_query_1
    - PRIMARY_KEY=city,date
    - PRIMARY_KEY_2=city,start_date
    - SELECT=start_date,duration_sec
    image: joiner:latest
    links:
    - rabbitmq
    networks:
    - testing_net
    restart: on-failure
  joiner_query_2:
    depends_on:
    - filter_stations_query2
    - filter_trips_year
    deploy:
      replicas: 1
    environment:
    - PYTHONUNBUFFERED=1
    - INPUT_EXCHANGE_1=joiner_query_2
    - INPUT_EXCHANGE_TYPE_1=fanout
    - INPUT_BIND_1=True
    - INPUT_QUEUE_NAME_2=joiner_2
    - OUTPUT_QUEUE_NAME=groupby_query_2
    - PRIMARY_KEY=city,code,yearid
    - PRIMARY_KEY_2=city,start_station_code,yearid
    - SELECT=name,yearid
    - NEEDED_EOF_1=1
    - JOINER_FUNCTION=default
    image: joiner:latest
    links:
    - rabbitmq
    networks:
    - testing_net
    restart: on-failure
  joiner_query_3:
    depends_on:
      rabbitmq:
        condition: service_healthy
    deploy:
      replicas: 1
    environment:
    - PYTHONUNBUFFERED=1
    - INPUT_EXCHANGE_1=joiner_query_3
    - INPUT_EXCHANGE_TYPE_1=fanout
    - INPUT_BIND_1=True
    - INPUT_QUEUE_NAME_2=joiner_3
    - OUTPUT_QUEUE_NAME=distance_calculator
    - PRIMARY_KEY=code,yearid
    - JOINER_FUNCTION=join_func_query3
    image: joiner:latest
    links:
    - rabbitmq
    networks:
    - testing_net
    restart: on-failure
  prectot_filter:
    depends_on:
      rabbitmq:
        condition: service_healthy
    deploy:
      replicas: 1
    environment:
    - PYTHONUNBUFFERED=1
    - SHOW_LOGS=False
    - INPUT_EXCHANGE=weathers
    - INPUT_EXCHANGE_TYPE=fanout
    - INPUT_QUEUE=prectot_filter
    - INPUT_BIND=True
    - OUTPUT_QUEUE_NAME=date_modifier
    - CANT_CONDICIONES=1
    - FILTER_0=1,int,prectot,gt,30
    image: filter:latest
    links:
    - rabbitmq
    networks:
    - testing_net
    restart: on-failure
  rabbitmq:
    build:
      context: ./rabbitmq
      dockerfile: rabbitmq.dockerfile
    environment:
    - RABBITMQ_LOGS=-
    healthcheck:
      interval: 10s
      retries: 10
      test:
      - CMD
      - curl
      - -f
      - http://localhost:15672
      timeout: 5s
    networks:
    - testing_net
    ports:
    - 15672:15672
  station_parser:
    depends_on:
      rabbitmq:
        condition: service_healthy
    deploy:
      replicas: 1
    environment:
    - PYTHONUNBUFFERED=1
    - INPUT_QUEUE=raw_stations
    - ROUTING_KEY=station
    image: parser:latest
    links:
    - rabbitmq
    networks:
    - testing_net
    restart: on-failure
  status_controller:
    container_name: status_controller
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
    - PYTHONUNBUFFERED=1
    - QTY_OF_QUERIES=3
    - INPUT_QUEUE_NAME=status_controller
    - OUTPUT_QUEUE_NAME=metrics
    image: status_controller:latest
    links:
    - rabbitmq
    networks:
    - testing_net
    restart: on-failure
  trip_parser:
    depends_on:
      rabbitmq:
        condition: service_healthy
    deploy:
      replicas: 2
    environment:
    - PYTHONUNBUFFERED=1
    - INPUT_QUEUE=raw_trips
    - ROUTING_KEY=trip
    image: parser:latest
    links:
    - rabbitmq
    networks:
    - testing_net
    restart: on-failure
  weather_parser:
    depends_on:
      rabbitmq:
        condition: service_healthy
    deploy:
      replicas: 1
    environment:
    - PYTHONUNBUFFERED=1
    - INPUT_QUEUE=raw_weathers
    - ROUTING_KEY=weather
    image: parser:latest
    links:
    - rabbitmq
    networks:
    - testing_net
    restart: on-failure
version: '3'
