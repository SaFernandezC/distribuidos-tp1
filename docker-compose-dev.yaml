version: '3'
services:
  rabbitmq:
    build:
      context: ./rabbitmq
      dockerfile: rabbitmq.dockerfile
    ports:
      - 15672:15672
    networks:
      - testing_net
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:15672"]
        interval: 10s
        timeout: 5s
        retries: 10

  accepter:
    container_name: accepter
    image: accepter:latest
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    networks:
      - testing_net
    environment:
      - PYTHONUNBUFFERED=1

  prectot_filter:
    container_name: prectot_filter
    image: filter:latest
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    networks:
      - testing_net
    environment:
      - PYTHONUNBUFFERED=1
      - INPUT_EXCHANGE=weathers
      - INPUT_EXCHANGE_TYPE=fanout
      - INPUT_QUEUE=prectot_filter
      - INPUT_BIND="True"
      # - OUTPUT_EXCHANGE=joiner_query_1
      # - OUTPUT_EXCHANGE_TYPE=fanout
      - OUTPUT_QUEUE_NAME=date_modifier
      - CANT_CONDICIONES=1
      - SELECT=city,date,prectot
      - FILTER_0=1,int,prectot,gt,35

  # date_modifier:
  #   container_name: date_modifier
  #   image: date_modifier:latest
  #   restart: on-failure
  #   depends_on:
  #     - prectot_filter
  #   links: 
  #     - rabbitmq
  #   environment:
  #     - PYTHONUNBUFFERED=1
  #     - INPUT_QUEUE_NAME=date_modifier
  #     - OUTPUT_EXCHANGE=joiner_query_1
  #     - OUTPUT_EXCHANGE_TYPE=fanout


  # joiner_query_1:
  #   container_name: joiner_query_1
  #   image: joiner:latest
  #   restart: on-failure
  #   depends_on:
  #     - rabbitmq
  #   links: 
  #     - rabbitmq
  #   environment:
  #     - PYTHONUNBUFFERED=1
  #     - INPUT_EXCHANGE=joiner_query_1
  #     - INPUT_EXCHANGE_TYPE=fanout
  #     - INPUT_BIND="True"
  #     - OUTPUT_QUEUE_NAME=groupby_query_1
  #     - PRIMARY_KEY=city,date
  #     - PRIMARY_KEY_2=city,start_date
  #     - JOIN_ON=rigth
  #     - SELECT=start_date,duration_sec

  # groupby_query_1:
  #   container_name: groupby_query_1
  #   image: groupby:latest
  #   restart: on-failure
  #   depends_on:
  #     - rabbitmq
  #   links: 
  #     - rabbitmq
  #   environment:
  #     - PYTHONUNBUFFERED=1
  #     - INPUT_QUEUE_NAME=groupby_query_1
  #     - PRIMARY_KEY=start_date
  #     - AGG=avg
  #     - FIELD_TO_AGREGATE=duration_sec


networks:
  testing_net:
    # external: true
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.25.125.0/24